name: Build

on:
  push:
    tags:
      - '*.*.*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: |
        mkdir goimapsync_{amd64,darwin,power8,arm64,windows}
        echo "AMD64 build"
        make build_amd64;   mv goimapsync goimapsync_amd64

        echo "Darwin build"
        make build_darwin;  mv goimapsync goimapsync_darwin

        echo "Power8 build"
        make build_power8;  mv goimapsync goimapsync_power8

        echo "ARM64 build"
        make build_arm64;   mv goimapsync goimapsync_arm64

        echo "Windows build"
        make build_windows; mv goimapsync goimapsync_windows

        echo "Tar all builds"
        tar cfz goimapsync_amd64.tar.gz goimapsync_amd64
        tar cfz goimapsync_darwin.tar.gz goimapsync_darwin
        tar cfz goimapsync_power8.tar.gz goimapsync_power8
        tar cfz goimapsync_arm64.tar.gz goimapsync_arm64
        tar cfz goimapsync_windows.tar.gz goimapsync_windows

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload amd64 binary
      id: upload-goimapsync
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goimapsync_amd64.tar.gz
        asset_name: goimapsync_amd64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload darwin binary
      id: upload-goimapsync-darwin
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goimapsync_darwin.tar.gz
        asset_name: goimapsync_darwin.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload power8 binary
      id: upload-goimapsync-power8
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goimapsync_power8.tar.gz
        asset_name: goimapsync_power8.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload arm64 binary
      id: upload-goimapsync-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goimapsync_arm64.tar.gz
        asset_name: goimapsync_arm64.tar.gz
        asset_content_type: application/octet-stream

    - name: Upload windows binary
      id: upload-goimapsync-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./goimapsync_windows.tar.gz
        asset_name: goimapsync_windows.tar.gz
        asset_content_type: application/octet-stream

    - name: Get the Ref
      id: get-ref
      uses: ankitvgupta/ref-to-tag-action@master
      with:
        ref: ${{ github.ref }}
        head_ref: ${{ github.head_ref }}

    - name: Build image
      run: |
        docker build . --tag docker.pkg.github.com/vkuznet/goimapsync/goimapsync

    - name: Login to docker github registry
      uses: docker/login-action@v1.6.0
      with:
        registry: docker.pkg.github.com
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish image
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: vkuznet/goimapsync/goimapsync
        tag_with_ref: true

#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKER_HUB_USERNAME }}
#         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#     - name: Build and push
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         file: ./Dockerfile
#         load: true
#         tags: veknet/goimapsync:${{steps.get-ref.outputs.tag}}
#     - run: docker push cmssw/goimapsync:${{steps.get-ref.outputs.tag}}
